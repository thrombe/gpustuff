
resources:
  . https://www.khronos.org/opengl/wiki/Compute_Shader
  . https://www.w3.org/TR/WGSL/
  . https://sotrh.github.io/learn-wgpu

custom commands:
  . /// import ./shader_path
    . keep track of what files included and dont import files multiple times
  . /// compute_enable
  . /// work_group_count 64

bugs:
  . 

plan:
  . try hybrid + gpustuff
  . try gpustuff without displaying (i.e only compute, not fragment/window)
  . check the rust-cuda ray-tracer for how it does things
  . show red/white screen if shader dont compile
  . dont crash if shader dont compile initially
  . send mouse coords in shader so that it can be used for fun things
    . like things interacting with mouse
    . using it as sliders for variables
  . how anti-aliasing
  . how do i check fps?
  . can i dump gifs and pics?
  . press button to pause time
  . handle errors properly
    . provide a simple shader if shaders dont compile as soon as the program starts

gol:
  . figure out how to retain last frame
  . for each pixel, it looks around it by offsets of the cell side to decide if the color should be b or w
  . this way, performance will only depend on the cell count and nothing else
  . no cpu needed/no buffers needed to store the cell/cell info

plot:
  . 

particle life:
  . how do i represent this efficiently
    . 

buddhabrot live-ish?:
  , 
